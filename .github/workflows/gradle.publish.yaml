# Based off https://github.com/MinecraftForge/SharedActions/blob/main/.github/workflows/gradle.yml
name: Gradle Publishing CI

on:
  workflow_call:
    inputs:
      java:
        description: "The version of Java to use to run Gradle" # Note: Gradle's Java toolchains feature is used for compiling, which is separate from this
        required: false
        type: string
        default: "21"
      gradle_tasks:
        description: "The Gradle task(s) to run at publication"
        required: false
        type: string
        default: "publish"
      curse_release_type:
        description: "The type of release to publish to CurseForge"
        required: false
        type: string
        default: "beta"
      changelog_max_issues:
        description: "The maximum number of issues to include in the changelog"
        required: false
        type: number
        default: 100

    secrets:
      DISCORD_WEBHOOK:
        required: true

      MAVEN_USER:
        required: true
      MAVEN_PASSWORD:
        required: true

      CURSE_API_KEY:
        required: true

      CROWDIN_API_KEY:
        required: true

      GRADLE_ENCRYPTION_KEY:
        required: true

permissions:
  contents: write
  statuses: write

jobs:
  compute-version:
    name: Compute version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      version_tag: ${{ steps.version.outputs.version_tag }}
      minecraft_version: ${{ steps.minecraftVersion.outputs.minecraft_version }}
    steps:
      - id: checkout
        name: "üì¶ Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - id: minecraftVersion
        name: "üì¶ Extract Minecraft version"
        run: |
          cat gradle.properties | grep exactMinecraftVersion | cut -d "=" -f 2 > minecraft_version.txt
          echo "Minecraft version: $(cat minecraft_version.txt)"
          echo "minecraft_version=$(cat minecraft_version.txt)" >> "$GITHUB_OUTPUT"  

      - id: version
        name: "üî¢ Compute version"
        uses: PaulHatch/semantic-version@v5.4.0
        with:
          tag_prefix: "v"
          search_commit_body: true
          debug: true
          bump_each_commit: true
          version_format: "${major}.${minor}.${patch}-${{ steps.minecraftVersion.outputs.minecraft_version }}-${{ inputs.curse_release_type }}"

  notify-build-start:
    needs: ["compute-version"]
    name: "üî¥ Build notifications (start)"
    runs-on: ubuntu-latest
    steps:
      - uses: neoforged/action-webhooks@v1
        name: "üî¥ Send Discord start notification"
        with:
          webhook_url: ${{ secrets.DISCORD_WEBHOOK }}
          status: 'started'
          version: "${{ needs.compute-version.outputs.version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: neoforged/action-github-status@v1
        name: "üöß Set pending status"
        with:
          authToken: ${{secrets.GITHUB_TOKEN}}
          context: 'Publishing'
          state: 'pending'
          description: "Version: ${{ needs.compute-version.outputs.version }}"
          target_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  gradle:
    needs: ["compute-version"] # Make sure we now the version before starting to build
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: "üì¶ Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 1000
          fetch-tags: true

      - id: setupJava
        name: "üîß Setup Java"
        # https://github.com/actions/runner-images/blob/main/images/linux/Ubuntu2204-Readme.md#java
        # language=bash
        run: |
          echo "JAVA_HOME=$(echo $JAVA_HOME_${{ inputs.java }}_X64)" >> "$GITHUB_ENV"

      - id: setupGradle
        name: "üîß Setup Gradle"
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: wrapper
          dependency-graph: generate-and-submit
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - id: tagLocalBuild
        name: "üè∑Ô∏è Tag local build"
        run: |
          git tag -a ${{ needs.compute-version.outputs.version }} -m "Version ${{ needs.compute-version.outputs.version }}"

      - id: generate-release-changelog
        name: "üìù Generate release changelog"
        uses: heinrichreimer/action-github-changelog-generator@v2.4
        with:
          output: changelog.md
          token: ${{ secrets.GITHUB_TOKEN }}
          stripGeneratorNotice: "true"
          onlyLastTag: true
          maxIssues: ${{ inputs.changelog_max_issues }}

      - id: publish
        name: "üöÄ Publish"
        run: ./gradlew --build-cache ${{ inputs.gradle_tasks }}
        env:
          LDTTeamJfrogUsername: ${{ secrets.MAVEN_USER }}
          LDTTeamJfrogPassword: ${{ secrets.MAVEN_PASSWORD }}
          CURSE_API_KEY: ${{ secrets.CURSE_API_KEY }}
          CURSE_RELEASE_TYPE: ${{ inputs.curse_release_type }}
          crowdinKey: ${{ secrets.CROWDIN_API_KEY }}
          Version: "${{ needs.compute-version.outputs.version }}"

      - name: "üöÄ Create GitHub release"
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.compute-version.outputs.version }}
          release_name: "Release ${{ needs.compute-version.outputs.version }}"
          body_path: changelog.md
          prerelease: ${{ inputs.curse_release_type != 'release' }}

  notify-build-end:
    name: Build notifications (end)
    needs: [ "compute-version", "notify-build-start", "gradle" ]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - uses: neoforged/action-webhooks@v1
        name: "üî¥ Send Discord end notification"
        with:
          webhook_url: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ needs.gradle.result }}
          version: "${{ needs.compute-version.outputs.version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: neoforged/action-github-status@v1
        name: "üöß Set build status"
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          context: 'Publishing'
          state: ${{ needs.gradle.result }}
          description: "Version: ${{ needs.compute-version.outputs.version }}"
          target_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
